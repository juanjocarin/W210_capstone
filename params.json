{
  "name": "SmartCam",
  "tagline": "MIDS Capstone Project",
  "body": "# Overview\r\n\r\nSurveillance cameras are ~~ubiquitous~~ everywhere. Both ~~individuals and organizations~~ home and business users want to be alerted of any unexpected presence at their house or premises.\r\n\r\nVideo image processing made it possible to record only what is needed (e.g., when motion or the presence of a certain object or person is detected) instead of indefinitely. Combined with machine learning techniques, it also allows to search patterns that can be useful for businesses such as finding hot spots, the most common paths taken by customers, and the most affluent hours. Hence, surveillance is not the only ~~feature~~ benefit of monitoring systems for business users.\r\n\r\n\r\n### Problem Statement\r\n\r\nMonitoring systems used to be ~~complex and~~ expensive. The advent of open-source computer-vision libraries like *OpenCV* and inexpensive single-board computers such as the *Raspberry Pi* has made building a monitoring system easier than ever, but  a solution based on them still presents some challenges to potential users:\r\n\r\n+ There are no out-of-the-box solutions like this: users need ~~the skills~~ to integrate the required hardware and software components.\r\n\r\n+ Depending on the user's needs, the hardware must have enough computing power to perform certain operations.\r\n\r\n+ Some users may require an integrated system that receives videos from different cameras / locations.\r\n\r\n### Our Proposal\r\n\r\nWe have built a **cloud-based video monitoring system able to detect motion and count human faces** (we focused on these two features, but others could be easily added in the future), that is simple and inexpensive but also powerful, reliable, and scalable. \r\n\r\nThe system is aimed at two customer segments: **home** and **business users** (stores, offices, malls, . . .). Everything they need (at each location they want to monitor) is a Raspberry Pi with a camera module; most of the ~~video~~ processing is done in the cloud and all the information is accessible through a web browser.\r\n\r\n### Value Proposition\r\n\r\nOur system is:\r\n\r\n+ **Cost-effective**: all the required hardware is a Raspberry Pi with a camera, whose price keeps dropping (the same applies to cloud computing and \r\n\r\n+ **Easy-to-install**: users can purchase an standard Raspberry Pi at their convenience and install the necessary software by themselves (following a list of simple steps), or acquire one with the software pre-installed from us.\r\n\t+ ~~An added benefit for home users in rented houses, who usually do not have the liberty to install comprehensive alarm systems.~~\r\n\r\n+ **Scalable**: adding more cameras is just a matter of installing and registering additional Raspberry Pis.\r\n\r\nOther benefits:\r\n\r\n+ Users have **real-time** access to the information: alerts, analytics, and video files.\r\n\r\n+ **Dual functionality** (especially for business users): The system can be used for surveillance purposes (e.g., once the store is closed) and also to get ~~helpful~~ insights to optimize business. For example, it can provide information about the amount of people entering a store (or moving through it) over time, which can be used to predict sales or adjust staff levels.\r\n\t+ The face counting feature can also be helpful for home users, once face recognition is added: alerts would not be sent if the face of a person has been previously added to the system.\r\n\r\n+ The video files are stored in the cloud (so there is no risk that the Raspberry Pi will run out of storage).\r\n\r\n<font color='red'>---------TO BE DELETED---------\r\n\r\n<font color='red'>*Value proposition is a clear statement that*</font>\r\n\r\n<font color='red'>+ *explains how your product solves customersâ€™ problems or improves their situation (**relevancy**),*\r\n+ *delivers specific benefits (**quantified value**), and*\r\n+ *tells the ideal customer why they should buy from you and not from the competition (**unique differentiation**).*</font>\r\n\r\n<font color='red'>---------(END OF) TO BE DELETED---------</font>\r\n\r\n# Our Solution\r\n\r\n### Architecture\r\n\r\n![Architecture Diagram](https://raw.githubusercontent.com/smart-cam/smart-cam/gh-pages/images/Architecture.png)\r\n\r\n\r\n# Challenges\r\n\r\n....\r\n\r\n\r\n# Possible Improvements\r\n\r\n+ Improve the system's Sensitivity and Precision (and hence the its Accuracy). I.e., minimize the amount of false positives (motion is detected in the absence of it) and false negatives (there is motion but it's not detected).\r\n\t+ Recall that:\r\n\r\n$$\\text{Sensitivity} = \\frac{TP}{TP+FN}; \\ \\ \\text{Precision} = \\frac{TP}{TP+FP}$$ $$\\text{Accuracy}=\\frac{TP+TN}{TP+TN+FP+FN}$$\r\n\r\n+ Improve face detection (considering other algorithms aside from Viola Jones).\r\n\r\n+ Add more video processing features.\r\n\t+ Such as face recognition, which would allow the system to alert of certain individuals or not, or keep track of the ones it has already detected (thus counting all the different people that has been recorded so far).\r\n![Architecture Diagram](https://raw.githubusercontent.com/smart-cam/smart-cam/gh-pages/images/FaceCounting.png)\r\n\r\n+ Implement an alert system that sends an email to the user upon certain events (whenever a video is captured, if the number of faces exceeds a certain threshold, etc.).\r\n\r\n\r\n# Our Team\r\n\r\n+ [James Route](https://github.com/jamesrt95)\r\n+ [Juan Jose Carin](https://github.com/juanjocarin)\r\n+ [Sayantan Satpati](https://github.com/sayantansatpati)\r\n+ [Vineet Gangwar](https://github.com/vgangwar)\r\n\r\n\r\n# Support / Contact\r\n\r\nWould you like to know more about this project or our team? Check out our [code](https://github.com/smart-cam/smart-cam) or [contact us](mailto:mids-w210@googlegroups.com ) and we'll be glad to tell you more.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}